# 
# K2HDKC CONFIGRATION FILE FOR TEST
#
# Copyright 2016 Yahoo! JAPAN corporation.
#
# K2HDKC is k2hash based distributed KVS cluster.
# K2HDKC uses K2HASH, CHMPX, FULLOCK libraries. K2HDKC supports
# distributed KVS cluster server program and client libraries.
#
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.
#
# AUTHOR:   Takeshi Nakatani
# CREATE:   Mon Jul 11 2016
# REVISION:
#

################################################################
# CONFIGRATION FILE FOR STANDALONE TEST
#
# NOTE:
# - k2hdkc server node must not be use MQACK
################################################################

#
# GLOBAL SECTION
#
GLOBAL:
    {
        FILEVERSION:            2,
        DATE:                   "Wed, 07 Sep 2016 13:55:04 +0900",
        GROUP:                  TESTDKC,
        MODE:                   SLAVE,
        DELIVERMODE:            hash,
        MAXCHMPX:               8,
        REPLICA:                1,
        MAXMQSERVER:            2,
        MAXMQCLIENT:            2,
        MQPERATTACH:            1,
        MAXQPERSERVERMQ:        2,
        MAXQPERCLIENTMQ:        1,
        MAXMQPERCLIENT:         1,
        MAXHISTLOG:             10000,
        #PORT:                  8020,
        CTLPORT:                8031,
        SELFCTLPORT:            8031,
        RWTIMEOUT:              100000,
        RETRYCNT:               1000,
        CONTIMEOUT:             500000,
        MQRWTIMEOUT:            1000,
        MQRETRYCNT:             10000,
        MQACK:                  no,
        AUTOMERGE:              on,
        DOMERGE:                on,
        MERGETIMEOUT:           0,
        SOCKTHREADCNT:          4,
        MQTHREADCNT:            4,
        MAXSOCKPOOL:            10,
        SOCKPOOLTIMEOUT:        0,
        SSL:                    no,
        K2HFULLMAP:             on,
        K2HMASKBIT:             4,
        K2HCMASKBIT:            4,
        K2HMAXELE:              4
    }

#
# SERVER NODES SECTION
#
SVRNODE:
    [
        {
            NAME:               localhost,
            PORT:               8020,
            CTLPORT:            8021,
            SSL:                no
        }
    ]

#
# SLAVE NODES SECTION
#
SLVNODE:
    [
        {
            NAME:               "[.]*",
            CTLPORT:            8031
        }
    ]

#
# VIM modelines
#
# vim:set ts=4 fenc=utf-8:
#
